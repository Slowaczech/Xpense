name: 📋 Known Working Setup Test

on:
  workflow_dispatch:

jobs:
  known-working:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: ☕ Java 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: 📦 Install exact versions from working examples
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          python3-pip \
          build-essential \
          git \
          python3-dev \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev
        
        python -m pip install --upgrade pip wheel setuptools
        pip install buildozer==1.4.0 cython==0.29.33

    - name: 📱 Use known working buildozer.spec template
      run: |
        cat > buildozer.spec << 'EOF'
        [app]
        title = HelloWorld
        package.name = helloworld
        package.domain = org.example.helloworld
        
        source.dir = .
        source.include_exts = py,png,jpg,kv,atlas
        
        version = 0.1
        
        requirements = python3,kivy
        
        [buildozer]
        log_level = 2
        
        [app:android]
        android.api = 30
        android.minapi = 21
        android.ndk = 23b
        android.accept_sdk_license = True
        android.arch = armeabi-v7a
        EOF

    - name: 🧪 Use official Kivy hello world example
      run: |
        cat > main.py << 'EOF'
        from kivy.app import App
        from kivy.uix.label import Label
        
        class MyApp(App):
            def build(self):
                return Label(text='Hello world')
        
        MyApp().run()
        EOF

    - name: 🔧 Set up build environment exactly as documented
      run: |
        export USE_SDK_WRAPPER=1
        export GRADLE_OPTS='-Dorg.gradle.jvmargs="-Xmx2048M -Dfile.encoding=UTF-8"'
        export ANDROID_HOME=/opt/android-sdk-linux
        echo "Environment set up completed"

    - name: 🚀 Build with known working configuration
      run: |
        buildozer android debug --verbose 2>&1 | tee known_working_build.log || {
          echo "=== KNOWN WORKING BUILD FAILED ==="
          echo "Exit code: $?"
          echo "=== LAST 50 LINES ==="
          tail -50 known_working_build.log
          echo "=== GRADLE LOGS ==="
          find .buildozer -path "*/gradle*" -name "*.log" | head -2 | while read log; do
            echo "=== $log ==="
            tail -30 "$log" 2>/dev/null || echo "Cannot read $log"
          done
          exit 1
        }

    - name: 📊 Upload results
      if: always()  
      uses: actions/upload-artifact@v4
      with:
        name: known-working-${{ github.run_number }}
        path: |
          known_working_build.log
          bin/*.apk
          .buildozer/android/platform/build-*/build.log
        if-no-files-found: warn
