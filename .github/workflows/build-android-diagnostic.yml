name: 🔍 Diagnostic Build Test

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  diagnose:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Setup Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: ☕ Setup Java 8
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: 📦 Install minimal dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y git python3-pip
        python -m pip install --upgrade pip
        pip install buildozer==1.2.0 cython==0.29.21

    - name: 🔧 Create absolute minimal buildozer.spec
      run: |
        cat > buildozer.spec << 'EOF'
        [app]
        title = Test
        package.name = test
        package.domain = org.test
        source.dir = .
        version = 0.1
        requirements = python3,kivy==2.0.0
        
        [buildozer]
        log_level = 2
        
        [app:android]
        android.api = 28
        android.minapi = 21
        android.ndk = 19b
        android.accept_sdk_license = True
        android.gradle_dependencies = 
        android.add_jars = 
        EOF

    - name: 🧪 Create minimal main.py
      run: |
        cat > main.py << 'EOF'
        import kivy
        kivy.require('2.0.0')
        from kivy.app import App
        from kivy.uix.label import Label
        
        class TestApp(App):
            def build(self):
                return Label(text='Hello')
        
        TestApp().run()
        EOF

    - name: 🔍 Show environment info
      run: |
        echo "=== ENVIRONMENT INFO ==="
        python --version
        java -version
        echo "=== BUILDOZER VERSION ==="
        buildozer version
        echo "=== ANDROID ENVIRONMENT ==="
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "PATH: $PATH"

    - name: 🚀 Initialize buildozer (only download)
      run: |
        buildozer android debug --verbose 2>&1 | tee build.log || {
          echo "=== BUILD FAILED - SHOWING LAST 100 LINES ==="
          tail -100 build.log
          echo "=== BUILDOZER LOG ==="
          find .buildozer -name "*.log" -exec echo "=== {} ===" \; -exec cat {} \; 2>/dev/null || echo "No logs found"
          echo "=== END DIAGNOSTIC ==="
          exit 1
        }

    - name: 📊 Upload diagnostic data
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: diagnostic-${{ github.run_number }}
        path: |
          build.log
          .buildozer/android/platform/build-*/build.log
          bin/*.apk
        if-no-files-found: warn
