name: 🔬 Minimal Diagnostic Test

on:
  workflow_dispatch:

jobs:
  minimal-test:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: ☕ Java 8
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: 🔍 Environment Check
      run: |
        echo "=== SYSTEM INFO ==="
        uname -a
        df -h
        free -h
        echo "=== PYTHON INFO ==="
        python3 --version
        which python3
        echo "=== JAVA INFO ==="
        java -version
        echo "JAVA_HOME: $JAVA_HOME"
        echo "=== PACKAGE MANAGER ==="
        sudo apt update -qq
        echo "Update completed"

    - name: 📦 Install only buildozer
      run: |
        python3 -m pip install --upgrade pip
        pip install --no-cache-dir buildozer==1.2.0
        echo "=== BUILDOZER INFO ==="
        buildozer version
        which buildozer

    - name: 📝 Create absolute minimal spec
      run: |
        cat > buildozer.spec << 'EOF'
        [app]
        title = Test
        package.name = test
        package.domain = org.test
        source.dir = .
        version = 0.1
        requirements = python3
        
        [buildozer]
        log_level = 2
        
        [app:android]
        android.api = 27
        android.minapi = 21
        android.ndk = 19b
        android.accept_sdk_license = True
        EOF
        echo "=== BUILDOZER SPEC ==="
        cat buildozer.spec

    - name: 🧪 Create minimal Python app (no Kivy!)
      run: |
        cat > main.py << 'EOF'
        print("Hello World from Android!")
        
        # Infinite loop to keep app running
        import time
        while True:
            time.sleep(1)
        EOF
        echo "=== MAIN.PY ==="
        cat main.py

    - name: 🚀 Try buildozer init only
      run: |
        echo "=== TESTING BUILDOZER INIT ==="
        buildozer init || echo "Init failed but continuing..."
        
        echo "=== TESTING ANDROID LIST ==="
        buildozer android list || echo "Android list failed but continuing..."
        
        echo "=== CHECKING AVAILABLE SPACE ==="
        df -h

    - name: 🔨 Attempt minimal build
      run: |
        echo "=== STARTING BUILD ==="
        export ANDROID_HOME=/opt/android-sdk-linux
        export USE_SDK_WRAPPER=1
        
        timeout 1800 buildozer android debug --verbose 2>&1 | tee full_build.log || {
          EXIT_CODE=$?
          echo "=== BUILD FAILED WITH EXIT CODE: $EXIT_CODE ==="
          echo "=== LAST 100 LINES OF OUTPUT ==="
          tail -100 full_build.log
          echo "=== SEARCHING FOR ERROR PATTERNS ==="
          grep -i "error\|failed\|exception\|traceback" full_build.log | tail -20 || echo "No error patterns found"
          echo "=== BUILDOZER LOGS ==="
          find .buildozer -name "*.log" 2>/dev/null | head -3 | while read logfile; do
            echo "=== CONTENT OF $logfile ==="
            tail -50 "$logfile" 2>/dev/null || echo "Cannot read $logfile"
          done
          echo "=== FINAL STATUS: BUILD FAILED ==="
          exit $EXIT_CODE
        }

    - name: 📊 Upload all diagnostic data
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: minimal-diagnostic-${{ github.run_number }}
        path: |
          full_build.log
          buildozer.spec
          main.py
          .buildozer/
        if-no-files-found: warn
        retention-days: 7
