name: 🔧 P4A Direct Build

on:
  workflow_dispatch:

jobs:
  p4a-build:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Setup Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: ☕ Setup Java 8
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: 🛠️ Install Android dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          python3-pip git wget unzip \
          build-essential libssl-dev libffi-dev \
          libncurses5-dev zlib1g-dev libbz2-dev libreadline-dev \
          libsqlite3-dev libltdl-dev

    - name: 📱 Setup Android SDK manually
      run: |
        # Download and setup Android SDK
        cd $HOME
        wget https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip
        unzip commandlinetools-linux-6609375_latest.zip
        mkdir -p android-sdk/cmdline-tools
        mv tools android-sdk/cmdline-tools/
        
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/tools/bin
        
        # Accept licenses and install components
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-28" "build-tools;28.0.3" "ndk;19.2.5345600"
        
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        echo "$HOME/android-sdk/cmdline-tools/tools/bin" >> $GITHUB_PATH

    - name: 🔧 Install python-for-android
      run: |
        python -m pip install --upgrade pip wheel
        pip install python-for-android==2022.3.13 cython==0.29.21

    - name: 🧪 Create test app
      run: |
        cat > main.py << 'EOF'
        from kivy.app import App
        from kivy.uix.label import Label
        
        class TestApp(App):
            def build(self):
                return Label(text='P4A Test')
        
        if __name__ == '__main__':
            TestApp().run()
        EOF

    - name: 🚀 Build directly with p4a
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/19.2.5345600
        export ANDROID_API=28
        export ANDROID_NDK_API=21
        
        echo "=== Environment ==="
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
        python --version
        p4a --version
        
        echo "=== Building ==="
        p4a apk \
          --name TestApp \
          --package org.example.testapp \
          --version 1.0 \
          --bootstrap sdl2 \
          --requirements python3,kivy==2.0.0 \
          --private . \
          --arch armeabi-v7a \
          --debug || {
            echo "=== P4A BUILD FAILED ==="
            find . -name "*.log" | head -3 | while read log; do
              echo "=== $log ==="
              tail -20 "$log"
            done
            exit 1
          }

    - name: 📊 Upload APK
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: p4a-apk-${{ github.run_number }}
        path: |
          dist/*.apk
          .p4a/
        if-no-files-found: warn
