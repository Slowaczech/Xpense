"""
Test podle nov√Ωch po≈æadavk≈Ø u≈æivatele - v√Ωdaje od aktu√°ln√≠ho dne do v√Ωplaty
"""
from main import FinanceCalculator
from datetime import datetime

def test_user_requirements():
    """Test podle po≈æadavk≈Ø u≈æivatele - zb√Ωvaj√≠c√≠ v√Ωdaje 9740 Kƒç"""
    
    # Data podle u≈æivatele
    current_balance = 12740
    payday = 15
    current_day = 6
    
    # V≈°echny v√Ωdaje (podle screenshotu u≈æivatele - celkem 9740)
    # P≈ôedpokl√°d√°m strukturu v√Ωdaj≈Ø, kter√© by daly souƒçet 9740
    expenses = [
        (1, "N√°jem", 5000, 6),     # Aktu√°ln√≠ den - ZB√ùV√Å
        (2, "J√≠dlo", 3000, 10),    # Do v√Ωplaty - ZB√ùV√Å  
        (3, "Doprava", 1740, 15),  # Den v√Ωplaty - ZB√ùV√Å
    ]
    
    result = FinanceCalculator.calculate_daily_budget(
        income=0,
        balance=current_balance,
        expenses=expenses,
        payday=payday,
        current_day=current_day
    )
    
    print(f"=== TEST PODLE U≈ΩIVATELOV√ùCH PO≈ΩADAVK≈Æ ===")
    print(f"Aktu√°ln√≠ den: {current_day}")
    print(f"Den v√Ωplaty: {payday}")
    print(f"Rozmez√≠ pro zb√Ωvaj√≠c√≠ v√Ωdaje: {current_day}. - {payday}. (vƒçetnƒõ)")
    print()
    
    print(f"Rozpis v√Ωdaj≈Ø:")
    expected_remaining = 0
    for _, name, amount, day in expenses:
        status = ""
        if current_day <= day <= payday:
            status = "ZB√ùV√Å ‚úÖ"
            expected_remaining += amount
        else:
            status = "NEZAPOƒå√çT√ÅV√Å SE ‚ùå"
        print(f"  {name}: {amount} Kƒç (den {day}) - {status}")
    
    print(f"\nV√Ωsledky:")
    print(f"  Oƒçek√°van√© zb√Ωvaj√≠c√≠ v√Ωdaje: {expected_remaining} Kƒç")
    print(f"  Vypoƒç√≠tan√© zb√Ωvaj√≠c√≠ v√Ωdaje: {result['remaining_expenses']} Kƒç")
    print(f"  Denn√≠ rozpoƒçet: {result['daily_budget']:.0f} Kƒç")
    print(f"  Dn≈Ø do v√Ωplaty: {result['days_until_payday']}")
    
    success = expected_remaining == result['remaining_expenses'] == 9740
    print(f"\n{'‚úÖ √öSPƒöCH' if success else '‚ùå CHYBA'}: Zb√Ωvaj√≠c√≠ v√Ωdaje = 9740 Kƒç")
    
    if not success:
        print(f"\nüîß Pro dosa≈æen√≠ 9740 Kƒç zb√Ωvaj√≠c√≠ch v√Ωdaj≈Ø pot≈ôebujeme:")
        print(f"   V≈°echny v√Ωdaje v rozmez√≠ {current_day}.-{payday}. = 9740 Kƒç celkem")

def test_with_different_expense_days():
    """Test s r≈Øzn√Ωmi dny v√Ωdaj≈Ø pro pochopen√≠ logiky"""
    
    current_balance = 12740
    payday = 15
    current_day = 6
    
    # R≈Øzn√© sc√©n√°≈ôe v√Ωdaj≈Ø
    scenarios = [
        {
            "name": "V≈°echny v√Ωdaje v rozmez√≠ 6.-15.",
            "expenses": [
                (1, "V√Ωdaj A", 3000, 6),   # Den 6 - ZB√ùV√Å
                (2, "V√Ωdaj B", 3000, 10),  # Den 10 - ZB√ùV√Å
                (3, "V√Ωdaj C", 3740, 15),  # Den 15 - ZB√ùV√Å
            ]
        },
        {
            "name": "V√Ωdaje mimo rozmez√≠",
            "expenses": [
                (1, "V√Ωdaj A", 2000, 5),   # Den 5 - NEZAPOƒå√çT√ÅV√Å
                (2, "V√Ωdaj B", 5000, 8),   # Den 8 - ZB√ùV√Å
                (3, "V√Ωdaj C", 2740, 20),  # Den 20 - NEZAPOƒå√çT√ÅV√Å
            ]
        }
    ]
    
    print(f"\n=== TESTOV√ÅN√ç R≈ÆZN√ùCH SC√âN√Å≈ò≈Æ ===")
    for scenario in scenarios:
        print(f"\n{scenario['name']}:")
        
        result = FinanceCalculator.calculate_daily_budget(
            income=0,
            balance=current_balance,
            expenses=scenario['expenses'],
            payday=payday,
            current_day=current_day
        )
        
        expected = sum(amount for _, _, amount, day in scenario['expenses'] 
                      if current_day <= day <= payday)
        
        for _, name, amount, day in scenario['expenses']:
            status = "ZB√ùV√Å" if current_day <= day <= payday else "MIMO ROZMEZ√ç"
            print(f"  {name}: {amount} Kƒç (den {day}) - {status}")
        
        print(f"  ‚Üí Zb√Ωvaj√≠c√≠ v√Ωdaje: {result['remaining_expenses']} Kƒç (oƒçek√°v√°no: {expected} Kƒç)")

if __name__ == "__main__":
    test_user_requirements()
    test_with_different_expense_days()
